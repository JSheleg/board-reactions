{"version":3,"sources":["assets/uno.png","utils/queries.js","pages/AllGames.js","pages/Contact.js","components/Donations/PaymentForm.js","components/Donations/StripeContainer.js","pages/Donations.js","pages/Home.js","utils/mutations.js","utils/auth.js","pages/Login.js","components/FriendList/index.js","components/FavoriteGamesList/index.js","components/CommentList/index.js","pages/Profile.js","pages/Signup.js","pages/SingleGame.js","components/Nav/index.js","components/UpdatePw/index.js","components/SecurityQuestions/index.js","pages/ForgotPW.js","components/Footer/index.js","pages/SubmitGame.js","App.js","reportWebVitals.js","index.js"],"names":["QUERY_USER","gql","QUERY_GAMES","QUERY_GAME","ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","AllGames","useQuery","loading","data","allGames","games","React","expandedId","setExpandedId","className","Box","sx","flexGrow","Grid","container","spacing","map","game","i","item","xs","Card","maxWidth","maxHeight","to","_id","CardMedia","component","height","image","alt","CardContent","Typography","gutterBottom","variant","game_name","category_id","CardActions","disableSpacing","onClick","handleExpandClick","Collapse","in","timeout","unmountOnExit","paragraph","game_description","Contact","CARD_OPTIONS","iconStyle","style","base","iconColor","color","fontWeight","fontFamily","fontSize","fontSmoothing","invalid","PaymentForm","useState","success","setSuccess","console","log","stripe","useStripe","elements","useElements","handleSubmit","e","a","preventDefault","createPaymentMethod","type","card","getElement","CardElement","error","paymentMethod","id","axios","post","amount","message","onSubmit","options","stripeTestPromise","loadStripe","StripeContainer","Donations","showItem","setShowItem","itemData","img","title","Home","direction","justifyContent","alignItems","src","srcSet","LOGIN","ADD_USER","UPDATE_PASSWORD","ADD_FRIEND","REMOVE_FRIEND","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","username","setItem","window","location","assign","removeItem","Item","Paper","typography","body2","padding","textAlign","palette","text","secondary","Login","email","password","formState","setFormState","useMutation","login","handleChange","event","target","name","value","handleFormSubmit","variables","mutationResponse","user","Auth","m","TextField","label","placeholder","onChange","autoComplete","Button","FriendList","friendCount","friends","deleteFriend","length","removeFriend","friendId","friend","FavoriteGamesList","CommentList","filter","index","self","indexOf","comments","comment","commentText","createdAt","Profile","addFriend","loggedInUser","getLoggedInUsername","userParam","loggedIn","useParams","userFavoriteGames","userCommentedGames","favoriteGames","favoritesCount","j","favorites","push","commentedGames","commentCount","handleAddFriend","Signup","addUser","securityQuestionsOne","securityQuestionsTwo","setSecurityQuestionsTwo","questionOne","answerOne","questionTwo","answerTwo","useEffect","updatedSecurityTwoQuestions","question","handleClick","borderBottom","htmlFor","FormControl","width","InputLabel","Select","MenuItem","verticalAlign","SingleGame","gameId","singleGame","gamebyId","pt","pb","pl","category","min_number_of_players","max_number_of_players","avg_min_game_time","avg_max_game_time","noValidate","multiline","rows","defaultValue","Stack","List","bgcolor","ListItem","ListItemAvatar","Avatar","ListItemText","primary","display","Divider","Nav","loggedInUsername","logout","p","for","grey","UpdatePw","updatePassword","SecurityQuestions","onBlur","ForgotPW","Footer","Link","href","setAge","setDuration","setCategory","SubmitGame","age","setage","setduration","setcategory","select","helperText","option","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8442786f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/uno.cc839a66.png\";","import { gql } from \"@apollo/client\";\n\nexport const QUERY_USERS = gql`\nquery getUsers {\n  users {\n    _id\n    username\n    email\n    questionOne\n    answerOne\n    questionTwo\n    answerTwo\n    friends {\n      _id\n      username\n    }\n    friendCount\n    games {\n      _id\n      game_name\n      favoritesCount\n      favorites {\n        _id\n        username\n      }\n      comments {\n        _id\n        commentText\n        username\n        createdAt\n      }\n      commentCount\n    }\n    gamesCount\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\nquery Query($username: String!) {\n  user(username: $username) {\n    _id\n    username\n    email\n    questionOne\n    answerOne\n    questionTwo\n    answerTwo\n    friends {\n      _id\n      username\n    }\n    friendCount\n    games {\n      _id\n      game_name\n      favoritesCount\n      favorites {\n        _id\n        username\n      }\n      comments {\n        _id\n        commentText\n        username\n        createdAt\n      }\n      commentCount\n    }\n    gamesCount\n  }\n}\n`;\n\nexport const QUERY_GAMES = gql`\nquery games {\n  games {\n    _id\n    game_name\n    category\n    min_number_of_players\n    max_number_of_players\n    avg_min_game_time\n    avg_max_game_time\n    game_description\n    favoritesCount\n    commentCount\n  }\n}\n`;\n\nexport const QUERY_GAME = gql`\nquery GameById ($gameId: String!) {\n  gamebyId(gameId: $gameId) {\n      _id\n      game_name\n      category\n      min_number_of_players\n      max_number_of_players\n      avg_min_game_time\n      avg_max_game_time\n      game_description\n      favoritesCount\n      favorites {\n        username\n        _id\n      }\n      comments {\n        username\n        commentText\n      }\n    }\n  }\n`;","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport ShareIcon from \"@mui/icons-material/Share\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Collapse from \"@mui/material/Collapse\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport image from \"../assets/uno.png\";\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { QUERY_GAMES } from \"../utils/queries\";\n\n// import { ADD_GAME } from '../utils/mutations'\n// import { useMutation } from '@apollo/client'\n\nconst ExpandMore = styled((props) => {\n  const { expand, ...other } = props;\n  return <IconButton {...other} />;\n})(({ theme, expand }) => ({\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\n  marginLeft: \"auto\",\n  transition: theme.transitions.create(\"transform\", {\n    duration: theme.transitions.duration.shortest,\n  }),\n}));\n\nconst AllGames = () => {\n  const { loading, data } = useQuery(QUERY_GAMES);\n  // const [ gameData, { error } ] = useMutation (ADD_GAME)\nconst allGames = data?.games || {}\n\n  const [expandedId, setExpandedId] = React.useState(-1);\n\n  const handleExpandClick = (i) => {\n    setExpandedId(expandedId === i ? -1 : i);\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"gameCardContainer\">\n      <Box sx={{ flexGrow: 6 }}>\n        <Grid container spacing={2}>\n          {allGames.map((game, i) => {\n            return (\n              <Grid item xs={4} i={i} key={game._id}>\n                <Card sx={{ maxWidth: 600, maxHeight: 9999 }}>\n                <Link to={`/games/${game._id}`}>\n                  <CardMedia\n                    component=\"img\"\n                    height=\"140\"\n                    image={image}\n                    alt=\"boardgame image\"\n                  />\n                  </Link>\n\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h4\" component=\"div\">\n                      {game.game_name}\n                    </Typography>\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\n                      {game.category_id}\n                    </Typography>\n                    <Typography\n                      gutterBottom\n                      variant=\"h5\"\n                      component=\"div\"\n                    ></Typography>\n                  </CardContent>\n\n                  <CardActions disableSpacing>\n                    <IconButton aria-label=\"add to favorites\">\n                      <FavoriteIcon />\n                    </IconButton>\n                    <IconButton aria-label=\"share\">\n                      <ShareIcon />\n                    </IconButton>\n                    <ExpandMore\n                      expand={expandedId === i}\n                      onClick={() => handleExpandClick(i)}\n                      aria-expanded={expandedId === i}\n                      aria-label=\"show more\"\n                    >\n                      <ExpandMoreIcon />\n                    </ExpandMore>\n                  </CardActions>\n                  <Collapse in={expandedId === i} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                      <Typography paragraph>{game.game_description}</Typography>\n                    </CardContent>\n                  </Collapse>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default AllGames;\n","const Contact = () => {\n    return(\n        <div>\n            This is the Contact page\n        </div>\n    )\n}\n\nexport default Contact;","import { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\"\nimport axios from \"axios\"\nimport React, { useState} from 'react'\n\nconst CARD_OPTIONS = {\n    iconStyle: \"solid\",\n    style: {\n            base: {\n                iconColor: \"#c4f0ff\",\n                color: \"#fff\",\n                fontWeight: 500,\n                fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\n                fontSize: \"16px\",\n                fontSmoothing: \"antialiased\",\n                \":-webkit-autofill\": { color: \"#fce883\" },\n                \"::placeholder\": { color: \"#87bbfd\" }\n            },\n            invalid: {\n                iconColor: \"#ffc7ee\",\n                color: \"#ffc7ee\"\n            }\n        }\n    }\n\nexport default function PaymentForm() {\n    const [success, setSuccess ] = useState(false)\n    console.log(setSuccess)\n    const stripe = useStripe()\n    const elements = useElements()\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n        const {error, paymentMethod} = await stripe.createPaymentMethod({\n            type: \"card\",\n            card: elements.getElement(CardElement)\n        })\n\n    if(!error) {\n        try {\n            const {id} = paymentMethod\n            const response = await axios.post(\"http://localhost:3001/payment\", {\n                amount: 2000,\n                id\n            })\n\n            if(response.data.success) {\n                console.log(\"Payment successful\")\n                setSuccess(true)\n            }\n        } catch (error) {\n            console.log(\"Error\", error)\n        }\n    } else {\n        console.log(error.message)\n    }\n}\n    return (\n        <>\n        {!success ?\n        <form onSubmit={handleSubmit}>\n            <fieldset className=\"FormGroup\">\n                <div className=\"FormRow\">\n                    <CardElement options={CARD_OPTIONS}/>\n                </div>\n            </fieldset>\n            <button className=\"donate-button\">Donate</button>\n        </form>\n        :\n        <div>\n            <h2>You just donated funds! Congrats on supporting the Board Reactions team! Your contribution will help us develop more features and content!</h2>\n        </div>\n    }\n    </>\n    )\n}","import React from 'react'\nimport { Elements } from \"@stripe/react-stripe-js\"\nimport { loadStripe } from '@stripe/stripe-js'\nimport PaymentForm from './PaymentForm'\n\nconst PUBLIC_KEY = \"pk_test_51JjEXYAm84GzBXtjvTPkq6GlMGxhpKWgmCAH7z9PuqIhWC8CqIUxNI6DXNXq7Zp6VTN7s3fXzXwYTSjciBWPAVQ100dDaehVVx\"\n\nconst stripeTestPromise = loadStripe(PUBLIC_KEY)\n\nexport default function StripeContainer() {\n    return (\n        <Elements stripe ={stripeTestPromise}>\n            <PaymentForm />\n\n        </Elements>\n    )\n}","import { useState } from \"react\";\nimport StripeContainer from '../components/Donations/StripeContainer';\n\n\nconst Donations = () => {\n     const [showItem, setShowItem] = useState(false) \n    \n     return(\n        <div className=\"App\">\n        <h1>Board Reaction's Donations</h1>\n        {showItem ? <StripeContainer/> : <> <h3>$20.00</h3>\n        <button className=\"donate-button\" onClick={() => setShowItem(true)}>Make a Donation</button></>}\n      </div>\n    );\n}\n\nexport default Donations;","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n// import Link from '@mui/material/Link';\n\n\nconst itemData = [\n  {\n    img: 'https://images.unsplash.com/photo-1551963831-b3b1ca40c98e',\n    title: 'Breakfast',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1551782450-a2132b4ba21d',\n    title: 'Burger',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1522770179533-24471fcdba45',\n    title: 'Camera',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1444418776041-9c7e33cc5a9c',\n    title: 'Coffee',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1533827432537-70133748f5c8',\n    title: 'Hats',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1558642452-9d2a7deb7f62',\n    title: 'Honey',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1516802273409-68526ee1bdd6',\n    title: 'Basketball',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1518756131217-31eb79b20e8f',\n    title: 'Fern',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1597645587822-e99fa5d45d25',\n    title: 'Mushrooms',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1567306301408-9b74779a11af',\n    title: 'Tomato basil',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1471357674240-e1a485acb3e1',\n    title: 'Sea star',\n  },\n  {\n    img: 'https://images.unsplash.com/photo-1589118949245-7d38baf380d6',\n    title: 'Bike',\n  },\n];\n\nconst Home = () => {\n    return(\n        <div>\n        <Box>\n        <Grid container spacing={0} direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\n        {itemData.map((item) => (\n            \n          <Grid item xs={1} key={item.img}>\n            <img\n              src={`${item.img}?w=164&h=164&fit=crop&auto=format`}\n              srcSet={`${item.img}?w=164&h=164&fit=crop&auto=format&dpr=2 2x`}\n              alt={item.title}\n              loading=\"lazy\"\n            />\n          </Grid>\n        ))}\n     </Grid>\n     </Box>\n     </div>\n    )\n}\n\nexport default Home;","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $username: String!, \n    $email: String!, \n    $password: String!, \n    $questionOne: String!,\n    $answerOne: String!,\n    $questionTwo: String!,\n    $answerTwo: String!\n  ) {\n    addUser(\n      username: $username\n      email: $email\n      password: $password\n      questionOne: $questionOne\n      answerOne: $answerOne\n      questionTwo: $questionTwo\n      answerTwo: $answerTwo\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const UPDATE_PASSWORD = gql`\nmutation updatePassword($username: String!, $password: String!) {\n    updatePassword(username: $username, password: $password) {\n      username\n      email\n    }\n  }\n`;\n\nexport const ADD_FRIEND = gql`\nmutation addFriend($friendId: ID!) {\n  addFriend(friendId: $friendId) {\n      _id\n      username\n      friends {\n        _id\n        username\n      }\n      friendCount\n  }\n}\n`;\n\nexport const REMOVE_FRIEND = gql`\nmutation deleteFriend($friendId: ID!) {\n  deleteFriend(friendId: $friendId) {\n    _id\n      username\n      friends {\n        _id\n        username\n      }\n      friendCount\n  }\n}\n`;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  getLoggedInUsername() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('username');\n  }\n\n  login(idToken, username) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    localStorage.setItem('username', username)\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    // axios.defaults.headers.common[\"Authorization\"] = null;\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('username');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nconst Login = () => {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: {\n          email: formState.email,\n          password: formState.password\n        }\n      });\n\n      const username = mutationResponse.data.login.user.username\n      const token = mutationResponse.data.login.token;\n      Auth.login(token, username);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return (\n    <section>\n      <Box component=\"form\" sx={{ flexGrow: 1 }}>\n        <Grid\n          container\n          spacing={0}\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <h5>\n            <Link to=\"/signup\">\n              <Grid item xs={12} m=\".5rem\">\n                ← New User? Go to Signup\n              </Grid>\n            </Link>\n          </h5>\n\n          <Grid item xs={12}>\n            <h1>Sign in</h1>\n          </Grid>\n\n          <Grid item xs={12}>\n            <form onSubmit={handleFormSubmit}>\n              <Item>\n                {/* <label htmlFor=\"email\">Email:</label>\n              <input\n                name=\"email\"\n                type=\"text\"\n                id=\"email\"\n                placeholder=\"email\"\n                onChange={handleChange}\n              /> */}\n                <TextField\n                  id=\"email\"\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  variant=\"filled\"\n                  onChange={handleChange}\n                  name=\"email\"\n                />\n              </Item>\n\n              <Item>\n                <TextField\n                  id=\"password-login\"\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  variant=\"filled\"\n                  onChange={handleChange}\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                />\n              </Item>\n              <Item>\n                {error ? (\n                  <div>\n                    <h7 className=\"error-message\">The provided credentials are incorrect</h7>\n                  </div>\n                ) : null}\n              </Item>\n\n              <Item>\n                {/* <button type=\"submit\">Login</button> */}\n                <Button onClick={handleFormSubmit} variant=\"contained\" color=\"success\">\n                  Login\n                </Button>\n              </Item>\n              <Item>\n                <h5>\n                  <Link to=\"/forgotpassword\">Forgot My Password</Link>\n                </h5>\n              </Item>\n            </form>\n          </Grid>\n        </Grid>\n      </Box>\n    </section>\n  );\n};\n\nexport default Login;\n","import { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { REMOVE_FRIEND } from '../../utils/mutations';\n\nconst FriendList = ({ friendCount, username, friends }) => {\n\n  const [deleteFriend] = useMutation(REMOVE_FRIEND);\n\n    if (!friends || !friends.length) {\n      return <p>{username}, make some friends!</p>;\n    }\n\n    console.log('friends', friends)\n\n    const removeFriend = async (friendId) => {\n\n      console.log('remove friend method is running')\n\n      try {\n        await deleteFriend({\n          variables: {friendId: friendId}\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n  \n    return (\n      <div>\n        <h5>\n          {username}'s {friendCount} {friendCount === 1 ? 'friend' : 'friends'}\n        </h5>\n        {friends.map(friend => (\n          <div key={friend._id}>\n          <button>\n            <Link to={`/profile/${friend.username}`}>{friend.username}</Link>\n          </button>\n          <button onClick={() => {removeFriend(friend._id)}}>\n          - Remove Friend\n          </button>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  export default FriendList;","import { Link } from 'react-router-dom';\n\nconst FavoriteGamesList = ({ username, games }) => {\n    if (!games || !games.length) {\n      return <p>{username}, go favorite some games!</p>;\n    }\n  \n    return (\n      <div>\n        <h5>\n          {username}'s {games.length} {games.length === 1 ? 'favorite game' : 'favorite games'}\n        </h5>\n        {games.map(game => (\n          <button key={game._id}>\n            <Link to={`/games/name:${game._id}`}>{game.game_name}</Link>\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  export default FavoriteGamesList;","import { Link } from 'react-router-dom';\n\nconst CommentList = ({ username, games }) => {\n\n    console.log('games', games)\n\n    //remove duplicate games from games array\n    games = games.filter((item, index, self) => self.indexOf(item) === index)\n\n    if (!games || !games.length) {\n        return <p>{username}, go comment on some games!</p>;\n    }\n\n    return (\n        <div>\n            <h5>\n                {username}'s {games.length === 1 ? 'comment! Click the game name to see the discussion!' : 'comments! Click the game name to see the discussion!'}\n            </h5>\n            {games.map((game, index) => (\n                <div>\n                    <button key={game._id}>\n                        <Link to={`/games/name:${game._id}`}>{game.game_name}</Link>\n                    </button>\n                    {games[index].comments.map(comment => (\n                        <div>\n                        {\n                            comment.username === username ?\n                                <p key={comment._id}>\"{comment.commentText}\" on {comment.createdAt}</p> \n                                : null\n                        }\n                        </div>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default CommentList;","import { useParams, Link } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { QUERY_USER } from '../utils/queries';\nimport { ADD_FRIEND } from '../utils/mutations';\nimport FriendList from '../components/FriendList';\nimport FavoriteGamesList from '../components/FavoriteGamesList';\nimport CommentList from '../components/CommentList';\nimport Auth from '../utils/auth';\n\n\nconst Profile = () => {\n\n    const [addFriend] = useMutation(ADD_FRIEND);\n\n    // get username of logged in user\n    const loggedInUser = Auth.getLoggedInUsername();\n\n    // check to see if user is logged in\n    const loggedIn = Auth.loggedIn();\n\n    //pull username from url\n    const { username: userParam } = useParams();\n\n    // query user data with username\n    const { loading, data } = useQuery(QUERY_USER, {\n        variables: {\n            username: userParam\n        }\n    })\n\n    //set data to variable user\n    const user = data?.user || {};\n\n    if (loading) {\n\n        return (\n            <div>\n                Loading...\n            </div>\n        )\n    }\n\n    if (!loading) {\n        let userFavoriteGames = []\n        let userCommentedGames = []\n\n        // create a variable called favoriteGames and filter out any games where favorite Count is 0;\n        if (user.games) {\n\n            const favoriteGames = user.games.filter(game => game.favoritesCount !== 0);\n\n            // for all the games that have favorites, push only the games the current user favorited to userFavoriteGames array\n            for (let i = 0; i < favoriteGames.length; i++) {\n                for (let j = 0; j < favoriteGames[i].favorites.length; j++) {\n                    if (favoriteGames[i].favorites[j].username === userParam) {\n                        userFavoriteGames.push(favoriteGames[i])\n                    }\n                }\n            }\n\n            // create a variable called commentedGames and filter out any games where comment Count is 0;\n            const commentedGames = user.games.filter(game => game.commentCount !== 0);\n\n            // for all the games that have comments, push only the games the current user commented on to usercommentedGames array\n            for (let i = 0; i < commentedGames.length; i++) {\n                for (let j = 0; j < commentedGames[i].comments.length; j++) {\n                    if (commentedGames[i].comments[j].username === userParam) {\n                        userCommentedGames.push(commentedGames[i])\n                    }\n                }\n            }\n\n            const handleAddFriend = async (friendId) => {\n                try {\n                    await addFriend({\n                        variables: { friendId: friendId }\n                    })\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n\n            return (\n                <div>\n                    {loggedInUser === userParam ?\n                        <h1>Welcome to your profile, {loggedInUser}!</h1>\n                        : <div>\n                            <h1>Welcome to {userParam}'s profile!</h1>\n                            <button onClick={() => { handleAddFriend(user._id) }}>\n                                + Add Friend\n                            </button>\n                        </div>}\n                    <Link to='/submitgame'>Didn't see a game you like listed on the all games page? Submit A Game!</Link>\n                    <FriendList\n                        username={user.username}\n                        friendCount={user.friendCount}\n                        friends={user.friends}\n                    />\n                    <FavoriteGamesList\n                        username={user.username}\n                        games={userFavoriteGames}\n                    />\n                    <CommentList\n                        username={user.username}\n                        games={userCommentedGames}\n                    />\n                </div>\n            )\n        }\n    }\n\n    return(\n        <h1>\n            Go browse the website and do things to display things here\n        </h1>\n    )\n}\n\nexport default Profile;","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Paper from \"@mui/material/Paper\";\nimport { styled } from \"@mui/material/styles\";\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { useTheme } from \"@mui/material/styles\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(2),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nconst Signup = () => {\n  const [addUser] = useMutation(ADD_USER);\n  const securityQuestionsOne = [\n    \"In what city were you born?\",\n    \"What is the name of your favorite pet?\",\n    \"What is your mother's maiden name?\",\n    \"What high school did you attend?\",\n    \"What was the make of your first car?\",\n  ];\n\n  const [securityQuestionsTwo, setSecurityQuestionsTwo] = useState([\n    \"In what city were you born?\",\n    \"What is the name of your favorite pet?\",\n    \"What is your mother's maiden name?\",\n    \"What high school did you attend?\",\n    \"What was the make of your first car?\",\n  ]);\n\n  const [formState, setFormState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    questionOne: \"\",\n    answerOne: \"\",\n    questionTwo: \"\",\n    answerTwo: \"\",\n  });\n\n  // update security questions 2 array to remove first question once user selects first question\n  useEffect(() => {\n    const { questionOne } = formState;\n    const updatedSecurityTwoQuestions = securityQuestionsOne.filter(\n      (question) => question !== questionOne\n    );\n\n    setSecurityQuestionsTwo(updatedSecurityTwoQuestions);\n  }, [formState.questionOne]);\n\n  // collect user inputs\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // collect questions user selects for security questions\n  const handleClick = (event) => {\n    const { id, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [id]: value,\n    });\n  };\n\n  // submit the collected data from user to create a new user and add them to the db\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        username: formState.username,\n        password: formState.password,\n        questionOne: formState.questionOne,\n        answerOne: formState.answerOne,\n        questionTwo: formState.questionTwo,\n        answerTwo: formState.answerTwo,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  return (\n    <section>\n      <Box component=\"form\" sx={{ flexGrow: 1, borderBottom:\"none\" }}>\n        <Grid\n          container\n          spacing={0}\n          direction=\"row\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <h5>\n            <Link to=\"/login\">\n              <Grid item xs={12} m=\".5rem\">\n                ← Go to Login\n              </Grid>\n            </Link>\n          </h5>\n          <Grid item xs={12}>\n            <h1>Sign Up</h1>\n          </Grid>\n\n          <Grid item xs={12}>\n            <form onSubmit={handleFormSubmit}>\n              {/* <div>\n                    <label htmlFor=\"username\">Username:</label>\n                    <input\n                        name='username'\n                        type=\"username\"\n                        id=\"username\"\n                        placeholder=\"Username\"\n                        onChange={handleChange}\n                    />\n                </div> */}\n\n              <Item>\n                <TextField\n                  id=\"username\"\n                  label=\"Username\"\n                  placeholder=\"Username\"\n                  variant=\"filled\"\n                  onChange={handleChange}\n                  name=\"username\"\n                  htmlFor=\"username\"\n                />\n              </Item>\n              {/* \n                <div>\n                    <label htmlFor=\"email\">E-mail:</label>\n                    <input\n                        name='email'\n                        type=\"email\"\n                        id=\"email\"\n                        placeholder=\"Email\"\n                        onChange={handleChange}\n                    />\n                </div> */}\n\n              <Item>\n                <TextField\n                  id=\"email\"\n                  label=\"Email\"\n                  placeholder=\"Email\"\n                  variant=\"filled\"\n                  onChange={handleChange}\n                  name=\"email\"\n                  htmlFor=\"email\"\n                />\n              </Item>\n\n              {/* <div>\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        name='password'\n                        type=\"password\"\n                        id=\"password\"\n                        placeholder=\"Password\"\n                        onChange={handleChange}\n                    />\n                </div> */}\n\n              <Item>\n                <TextField\n                  id=\"password\"\n                  label=\"Password\"\n                  placeholder=\"Password\"\n                  variant=\"filled\"\n                  onChange={handleChange}\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                />\n              </Item>\n\n              <Item>\n              <FormControl sx={{ m: 2, width: 250 }}>\n                <InputLabel value=\"select\" sx={{ m: 1, }}>Select Security Question 1</InputLabel>\n                <Select sx={{ fontSize: 11, fontWeight: 'medium' }} id=\"questionOne\" onClick={handleClick}>\n                  {securityQuestionsOne.map((question, index) => {\n                    return (\n                      <MenuItem sx={{ fontSize: 15 }} value={question} key={index}>\n                        {question}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n                </FormControl>\n              </Item>\n              <Item>\n                  \n                {/* <label htmlFor=\"answerOne\"></label>\n                <input\n                  name=\"answerOne\"\n                  type=\"answerOne\"\n                  id=\"answerOne\"\n                  placeholder=\"Answer\"\n                  onChange={handleChange}\n                /> */}\n                                <TextField\n                  id=\"answerOne\"\n                  label=\"Answer 1\"\n                  placeholder=\"Answer 1\"\n                  variant=\"filled\"\n                  onChange={handleChange}\n                  name=\"answerOne\"\n                  htmlFor=\"answerOne\"\n                />\n              </Item>\n\n              <Item>\n                <FormControl sx={{ m: 2, width: 250 }}>\n                  <InputLabel sx={{ m: 1, verticalAlign: 'center' }} value=\"select\" >\n                    Select Security Question 2\n                  </InputLabel>\n                  <Select sx={{ fontSize: 11, fontWeight: 'medium' }}\n                    id=\"questionTwo\"\n                    onClick={handleClick}\n                  >\n                    {/* <option value='select'>Select Security Question 2</option> */}\n                    {securityQuestionsTwo.map((question, index) => {\n                      return (\n                        <MenuItem sx={{ fontSize: 15 }} value={question} key={index}>\n                          {question}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </FormControl>\n              </Item>\n              <Item>\n                {/* <label htmlFor=\"answerTwo\"></label>\n                <input\n                  name=\"answerTwo\"\n                  type=\"answerTwo\"\n                  id=\"answerTwo\"\n                  placeholder=\"Answer\"\n                  onChange={handleChange}\n                /> */}\n                                                <TextField\n                  id=\"answerTwo\"\n                  label=\"Answer 2\"\n                  placeholder=\"Answer 2\"\n                  variant=\"filled\"\n                  onChange={handleChange}\n                  name=\"answerTwo\"\n                  htmlFor=\"answerOne\"\n                />\n              </Item>\n              <Item>\n                {/* <button type=\"submit\">Signup</button> */}\n                <Button sx={{ width: 200 }}\n                  onClick={handleFormSubmit}\n                  variant=\"contained\"\n                  color=\"success\"\n                >\n                  Signup\n                </Button>\n              </Item>\n            </form>\n          </Grid>\n        </Grid>\n      </Box>\n    </section>\n  );\n};\n\nexport default Signup;\n","import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport Divider from \"@mui/material/Divider\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\nimport Avatar from \"@mui/material/Avatar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_GAME } from \"../utils/queries\";\n\nimport image from \"../assets/uno.png\";\n\nconst SingleGame = props => {\n\n  // const windowId = window.location.toString().split(':')[window.location.toString().split(':').length - 1];\n  // console.log(windowId)\n\n  // const { loading, data } = useQuery(QUERY_GAME);\n\n  let { gameId: gameId} = useParams();\n\n  const { loading, data } = useQuery(QUERY_GAME, {\n    variables: { gameId: gameId }\n  });\n\n\n  const singleGame = data?.gamebyId || {}\nconsole.log(singleGame.game_name)\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n      <div>\n    <Grid item xs={12} pt={25} pb={2} pl={50}>\n      <Card sx={{ maxWidth: 1000, maxHeight: 9999 }}>\n        <CardMedia\n          component=\"img\"\n          height=\"500\"\n          image={image}\n          alt=\"boardgame image\"\n        />\n\n        <CardContent>\n          <Typography gutterBottom variant=\"h4\" component=\"div\">\n            {singleGame.game_name}\n          </Typography>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {singleGame.category}\n          </Typography>\n          <Typography gutterBottom variant=\"h7\" component=\"div\">\n              Players: {singleGame.min_number_of_players} to {singleGame.max_number_of_players}\n          </Typography>\n          <Typography gutterBottom variant=\"h7\" component=\"div\">\n              Duration: {singleGame.avg_min_game_time} to  {singleGame.avg_max_game_time} min\n          </Typography>\n          <Typography gutterBottom variant=\"h7\" component=\"div\">\n               {singleGame.game_description}\n          </Typography>\n          <IconButton aria-label=\"add to favorites\">\n                      <FavoriteIcon />\n                    </IconButton>\n        </CardContent>\n      </Card>\n</Grid>\n\n\n      <Box\n        component=\"form\"\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"40ch\" },\n        }}\n        noValidate\n        autoComplete=\"off\"\n        pl=\"25rem\"\n      >\n        <div>\n        <h1>Leave a Comment</h1>\n          <TextField\n            id=\"filled-multiline-static\"\n            label=\"\"\n            multiline\n            rows={10}\n            defaultValue=\"\"\n            placeholder=\"Comment\"\n            variant=\"filled\"\n          />\n        </div>\n        <Stack direction=\"row\" spacing={2} pl='7.5rem'>\n\n      <Button variant=\"contained\" color=\"success\">\n        Submit\n      </Button>\n\n    </Stack>\n      </Box>\n\n<Grid item xs={12} pt={0} pb={0} pl={50}>\n      <List sx={{ width: \"100%\", maxWidth: 700, bgcolor: \"background.paper\" }}>\n        <ListItem alignItems=\"flex-start\">\n          <ListItemAvatar>\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\n          </ListItemAvatar>\n          <ListItemText\n            primary={<FavoriteIcon />}\n            secondary={\n              <React.Fragment>\n                <Typography\n                  sx={{ display: \"inline\" }}\n                  component=\"span\"\n                  variant=\"body2\"\n                  color=\"text.primary\"\n                >\n                  {singleGame.comments.username}\n                </Typography>\n                {singleGame.comments.commentText}\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n        <Divider variant=\"inset\" component=\"li\" />\n      </List>\n      </Grid>\n      </div>\n  );\n};\n\nexport default SingleGame;\n","import { Link } from \"react-router-dom\";\nimport { styled } from \"@mui/material/styles\";\nimport \"./index.css\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport Auth from \"../../utils/auth\";\nimport { grey } from \"@mui/material/colors\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nconst Nav = () => {\n\n  const loggedIn = Auth.loggedIn();\n  console.log(loggedIn);\n\n  const loggedInUsername = Auth.getLoggedInUsername();\n\n  return (\n    <div>\n      <input type=\"checkbox\" id=\"toggle\" name=\"toggle\"></input>\n        {loggedIn ? (\n          <ul className=\"navigation-menu\">\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/\" onClick={() => Auth.logout()}>\n                Logout\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/games\">Games</Link>\n            </li>\n            <li>\n              <Link to=\"/contact\">Contact</Link>\n            </li>\n            <li>\n              {/* we will set this to logged in user eventually */}\n              <Link to={`/profile/${loggedInUsername}`}>Profile</Link>\n            </li>\n            <li>\n              <Link to=\"/submitgame\">Add Game</Link>\n            </li>\n            <li>\n              <Link to=\"/donate\">Donations</Link>\n            </li>\n          </ul>\n        ) : (\n          <ul className=\"navigation-menu\">\n          <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/login\">Login</Link>\n        </li>\n        <li>\n          <Link to=\"/games\">Games</Link>\n        </li>\n        <li>\n          <Link to=\"/contact\">Contact</Link>\n        </li>\n        </ul>\n        )}\n      <Box sx={{ flexGrow: 1 }}>\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={1} key=\"menubar\" bgcolor=\"primary.main\" p=\"20px\">\n            <label for=\"toggle\">\n              <MenuIcon sx={{ color: grey[50], fontSize: 50 }} />\n            </label>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nexport default Nav;\n","import { useMutation } from '@apollo/client';\nimport { useState } from 'react';\n\nimport { UPDATE_PASSWORD } from '../../utils/mutations';\n\nconst UpdatePw = (props) => {\n    const [formState, setFormState] = useState({\n        password: ''\n    })\n\n    const [updatePassword, { error }] = useMutation(UPDATE_PASSWORD);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    const handleFormSubmit = async event => {\n        event.preventDefault();\n\n        try {\n            const mutationResponse = await updatePassword({\n                variables: {\n                    username: props.username,\n                    password: formState.password\n                }\n            })\n\n            console.log(mutationResponse)\n\n            window.location.assign('/login');\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    return(\n        <form onSubmit={handleFormSubmit}>\n                <div>\n                    <label htmlFor=\"password-update\">Please enter your new password: </label>\n                    <input\n                        name='password'\n                        type=\"password\"\n                        id=\"password-update\"\n                        placeholder=\"New Password\"\n                        onChange={handleChange}\n                    />\n                </div>\n                <div>\n                    <button type=\"submit\">Submit</button>\n                </div>\n            </form>\n    )\n}\n\nexport default UpdatePw;","import { useState } from 'react';\nimport { useQuery} from '@apollo/client';\n\nimport { QUERY_USER } from '../../utils/queries';\nimport UpdatePw from '../UpdatePw';\n\nconst SecurityQuestions = (props) => {\n\n    const { loading, data, error } = useQuery(QUERY_USER, {\n        variables: { username: props.username }\n    })\n\n    const [formState, setFormState] = useState({\n        answerOne: '',\n        answerTwo: ''\n    })\n\n    const user = data?.user || {};\n\n    console.log(user)\n\n    if (loading) {\n        return (\n            <div>\n                Loading....\n            </div>\n        )\n    }\n\n    if (!user.username) {\n        return (\n            <div>\n                Username not found in system.\n            </div>\n        )\n    }\n\n    // collect user inputs\n    const handleChange = event => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        })\n    }\n\n    return (\n        <section>\n            <div>\n                <label htmlFor=\"answerOne\">{user.questionOne}</label>\n                <input\n                    name='answerOne'\n                    type=\"answerOne\"\n                    id=\"answerOne\"\n                    placeholder=\"Answer\"\n                    onBlur={handleChange}\n                />\n            </div>\n            <div>\n                <label htmlFor=\"answerTwo\">{user.questionTwo}</label>\n                <input\n                    name='answerTwo'\n                    type=\"answerTwo\"\n                    id=\"answerTwo\"\n                    placeholder=\"Answer\"\n                    onBlur={handleChange}\n                />\n            </div>\n            <div id='update_pw_div'>\n            {formState.answerOne === user.answerOne && formState.answerTwo === user.answerTwo ? (\n                <UpdatePw username={props.username}/>\n            ) : (\n                <p>Incorrect Security Answers. Please Try Again.</p>\n            )}\n            </div>\n        </section>\n    )\n}\n\nexport default SecurityQuestions;","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport SecurityQuestions from '../components/SecurityQuestions';\n\n\nconst ForgotPW = () => {\n    const [formState, setFormState] = useState({\n        username: null,\n    });\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <section>\n            <Link to=\"/login\">← Remember Password? Go to Login</Link>\n            <h1>Forgot Password</h1>\n\n            <section>\n                <div>\n                    <label htmlFor=\"username\"></label>\n                    <input\n                        name='username'\n                        type=\"username\"\n                        id=\"username\"\n                        placeholder=\"Enter your username\"\n                        onBlur={handleChange}\n                    />\n                </div>\n\n                <br />\n\n                {formState.username ? (\n                    <div>\n                        <SecurityQuestions username={formState.username}/>\n                    </div>\n                ) : null}\n            </section>\n        </section>\n    )\n}\n\nexport default ForgotPW;","import * as React from 'react';\nimport './index.css';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\n\nconst Item = styled(Paper)(({ theme }) => ({\n    ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }));\n\nconst itemData = [\n    {\n      img: 'https://st.depositphotos.com/2101611/3925/v/600/depositphotos_39258143-stock-illustration-businessman-avatar-profile-picture.jpg',\n      title: 'Mark',\n    },\n    {\n      img: 'https://st.depositphotos.com/2101611/3925/v/600/depositphotos_39258143-stock-illustration-businessman-avatar-profile-picture.jpg',\n      title: 'Jessica',\n    },\n    {\n      img: 'https://st.depositphotos.com/2101611/3925/v/600/depositphotos_39258143-stock-illustration-businessman-avatar-profile-picture.jpg',\n      title: 'Jane',\n    },\n    {\n      img: 'https://st.depositphotos.com/2101611/3925/v/600/depositphotos_39258143-stock-illustration-businessman-avatar-profile-picture.jpg',\n      title: 'Josh',\n    },\n  ];\n\nconst Footer = () => {\n    return (\n<div>\n\n<Box sx={{ flexGrow: 1}}>\n        <Grid container spacing={0} direction=\"row\" justifyContent=\"space-around\" alignItems=\"flex-end\" pt=\"40vw\">\n        {/* <Grid item xs key='leftSpacer'></Grid> */}\n\n      {itemData.map((item) => (\n        <Grid item xs={1} key={item.img}>\n          <Link href=\"www.google.com\"><img\n            src={`${item.img}`}\n            srcSet={`${item.img}`}\n            alt={item.title}\n            loading=\"lazy\"\n            width=\"60px\"\n            height=\"80px\"\n          /></Link>\n        </Grid>\n      ))}\n    {/* <Grid item xs key='rightSpacer'></Grid> */}\n    </Grid>\n      </Box>\n</div>\n    )\n        }\nexport default Footer;","import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\n\nconst setAge = [\n  {\n    value: \"4\",\n    label: \"4+\",\n  },\n  {\n    value: \"5\",\n    label: \"5+\",\n  },\n  {\n    value: \"6\",\n    label: \"6+\",\n  },\n  {\n    value: \"7\",\n    label: \"7+\",\n  },\n];\nconst setDuration = [\n  {\n    value: \"20\",\n    label: \"20+ min\",\n  },\n  {\n    value: \"30\",\n    label: \"30+ min\",\n  },\n  {\n    value: \"30\",\n    label: \"40+ min\",\n  },\n  {\n    value: \"50\",\n    label: \"50+ min\",\n  },\n  {\n    value: \"60\",\n    label: \"60+ min\",\n  },\n];\nconst setCategory = [\n    {\n      value: \"Party\",\n      label: \"Party\",\n    },\n    {\n      value: \"Strategy\",\n      label: \"Strategy\",\n    },\n    {\n      value: \"Cards\",\n      label: \"Cards\",\n    },\n    {\n      value: \"Gambling\",\n      label: \"Gambling\",\n    },\n  ];\n\nconst SubmitGame = () => {\n//   const [value, setValue] = React.useState(\"Controlled\");\n\n//   const handleChange = (event) => {\n//     setValue(event.target.value);\n//   };\n\n  const [age, setage] = React.useState(\"\");\n\n  const handleAgeChange = (event) => {\n    setage(event.target.value);\n  };\n\n  const [duration, setduration] = React.useState(\"\");\n\n  const handleDurationChange = (event) => {\n    setduration(event.target.value);\n  };\n\n  const [category, setcategory] = React.useState(\"\");\n\n  const handleCategoryChange = (event) => {\n    setcategory(event.target.value);\n  };\n\n  return (\n    <div className=\"addGame\">\n      <h1>ADD A GAME</h1>\n      <Box\n        component=\"form\"\n        sx={{\n          \"& .MuiTextField-root\": { m: 1, width: \"40ch\" },\n        }}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div>\n          <TextField\n            id=\"filled-textarea\"\n            label=\"\"\n            placeholder=\"Title\"\n            multiline\n            variant=\"filled\"\n          />\n          <TextField\n            id=\"\"\n            select\n            label=\"Category\"\n            value={category}\n            onChange={handleCategoryChange}\n            helperText=\"Please select your category\"\n            variant=\"filled\"\n          >\n            {setCategory.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n        <div>\n          <TextField\n            id=\"filled-multiline-static\"\n            label=\"\"\n            multiline\n            rows={10}\n            defaultValue=\"\"\n            placeholder=\"Description\"\n            variant=\"filled\"\n          />\n          <TextField\n            id=\"filled-multiline-static\"\n            label=\"\"\n            multiline\n            rows={10}\n            defaultValue=\"\"\n            placeholder=\"Instructions\"\n            variant=\"filled\"\n          />\n        </div>\n        <div>\n          <TextField\n            id=\"filled-select-age\"\n            select\n            label=\"Age\"\n            value={age}\n            onChange={handleAgeChange}\n            helperText=\"Please select your age\"\n            variant=\"filled\"\n          >\n            {setAge.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n          <TextField\n            id=\"\"\n            select\n            label=\"Duration\"\n            value={duration}\n            onChange={handleDurationChange}\n            helperText=\"Please select your duration\"\n            variant=\"filled\"\n          >\n            {setDuration.map((option) => (\n              <MenuItem key={option.value} value={option.value}>\n                {option.label}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n        <Stack direction=\"row\" spacing={2} pl='18.5rem'>\n\n      <Button variant=\"contained\" color=\"success\">\n        Submit Game\n      </Button>\n\n    </Stack>\n      </Box>\n    </div>\n  );\n};\n\nexport default SubmitGame;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  createHttpLink\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n\nimport AllGames from './pages/AllGames';\nimport Contact from './pages/Contact';\nimport Donations from './pages/Donations';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Profile from './pages/Profile';\nimport Signup from './pages/Signup';\nimport SingleGame from './pages/SingleGame';\nimport Nav from './components/Nav';\nimport ForgotPW from './pages/ForgotPW';\nimport Footer from './components/Footer';\nimport SubmitGame from './pages/SubmitGame';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <Route exact path=\"/games\" component={AllGames} />\n            <Route exact path=\"/games/:gameId\" component={SingleGame} />\n            <Route exact path=\"/contact\" component={Contact} />\n            <Route exact path=\"/profile/:username?\" component={Profile} />\n            <Route exact path=\"/submitgame\" component={SubmitGame} />\n            <Route exact path=\"/donate\" component={Donations} />\n            <Route exact path=\"/forgotpassword\" component={ForgotPW}   />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}